@model RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = null;
}



<html>
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Sports Management::Login</title>

    <link href="/Content/css/bootstrap.min.css" rel="stylesheet">
    <link href="/Content/css/font-awesome.min.css" rel="stylesheet" />

    <link href="/Content/css/animate.css" rel="stylesheet">
    <link href="/Content/css/style.css" rel="stylesheet">
    <link href="/Content/css/parallax.css" rel="stylesheet">

    <style>
        .loginscreen.middle-box {
            margin-right: -209px;
            width: 807px;
            padding: 15px;
            background-color: RGBA(255,255,255,.5);
            box-sizing: border-box;
        }

        .middle-box {
            max-width: 1400px;
            z-index: 100;
            margin: 0 auto;
            padding-top: 40px;
        }
    </style>
    <!-- Mainly scripts -->

    <script src="/Content/js/jquery-2.1.3.min.js"></script>
    <script src="/Content/js/bootstrap.min.js"></script>
</head>

<body class="">
    <div class="parallax">
        <div id="container" class="container">

            <div style="position:relative;">
                <div class="middle-box text-center loginscreen  animated fadeInDown">
                    <div>
                        <h3 style="font-size: 40px;">Sign-Up</h3>
                        <p>
                            Provide valid information required below.
                        </p>
                        @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "m-t", role = "form" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group row">
                                @Html.LabelFor(m => m.UserName, new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "UserName" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.Name, htmlAttributes: new { @ID = "lblName", @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Full Name" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "example@domain.com" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.City, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.City, new { @class = "form-control", @placeholder = "Sydney" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @placeholder = "Complete address with house and street #", @row = 4 })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(m => m.Password, new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "*****" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "*****" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(m => m.IsTeam, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(m => m.IsTeam, new { htmlAttributes = new { @ID = "chkIsTeam", @class = "custom-control custom-checkbox" } })
                                </div>
                            </div>
                            <div class="form-group row" id="divTotalMembers" style="display:none">
                                @Html.LabelFor(m => m.TotalMembers, new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.TotalMembers, new { @class = "form-control", @placeholder = "Total # of members in team" })
                                </div>
                            </div>
                            <div class="form-group row">
                                @Html.LabelFor(m => m.IsFree, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.EditorFor(m => m.IsFree, new { htmlAttributes = new { @ID = "chkIsFree", @class = "custom-control custom-checkbox" } })
                                </div>
                            </div>
                            <div class="form-group row" id="divTotalTickets" style="display:none">
                                @Html.LabelFor(m => m.TotalTickets, new { @class = "col-xs-2 col-form-label form-control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.TotalTickets, new { @class = "form-control", @placeholder = "Total # of Tickets available" })
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" class="btn btn-primary" value="Register" style="background-color: #2196F3;border-color: #2196F3;color: white;" />
                                    <a href="/Account/Login" type="button" class="btn btn-default">Login</a>
                                </div>
                            </div>
                        }

                    </div>

                </div>
            </div>

        </div>
    </div>

    <script type="text/javascript">
        $('.alert-success').delay(5000).fadeOut(400);
        $('form').submit(function () {
            $('input:submit', this).click(function () {
                return false;
            });
            $('button:submit', this).click(function () {
                return false;
            });
        });

        $(document).ready(function () {
            $('input:text').blur(function () {
                var txtId = this.id;
                var el = $("#" + txtId)[0];

                var refinedVal = $(el).val().replace(/[<>]+/g, "");
                $($(el)[0]).val(refinedVal);

            });
            $('textarea').blur(function () {
                var textarea = $("#" + this.id)[0];
                var refinTextAreaVal = $(textarea).val().replace(/[<>]+/g, "");
                $($(textarea)[0]).val(refinTextAreaVal);
            });
            $('input:password').blur(function () {
                var txtId = this.id;
                var el = $("#" + txtId)[0];

                var refinedVal = $(el).val().replace(/[<>]+/g, "");
                $($(el)[0]).val(refinedVal);

            });
            document.getElementById("chkIsFree").checked = true;
        });


        $('#chkIsTeam').on('change', function () {
            if ($('#chkIsTeam:checked').length > 0) {
                $('#lblName').text('Team Name');
                $('#divTotalMembers').show();
            }
            else {
                $('#lblName').text('Name');
                $('#divTotalMembers').hide();
            }
        });

        $('#chkIsFree').on('change', function () {
            if ($('#chkIsFree:checked').length > 0) {
                $('#divTotalTickets').hide();
            }
            else {
                $('#divTotalTickets').show();
            }
        });



    </script>
</body>


</html>





@*@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Create Account.</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "UserName" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Name, htmlAttributes: new { @ID = "lblName", @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Full Name" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "example@domain.com" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.City, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.City, new { @class = "form-control", @placeholder = "Sydney" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.Address, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @placeholder = "Complete address with house and street #", @row = 4 })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "*****" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "*****" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(m => m.IsTeam, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(m => m.IsTeam, new { htmlAttributes = new { @ID = "chkIsTeam", @class = "custom-control custom-checkbox" } })
            </div>
        </div>
        <div class="form-group row" id="divTotalMembers" style="display:none">
            @Html.LabelFor(m => m.TotalMembers, new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.TotalMembers, new { @class = "form-control", @placeholder = "Total # of members in team" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.IsFree, htmlAttributes: new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(m => m.IsFree, new { htmlAttributes = new { @ID = "chkIsFree", @class = "custom-control custom-checkbox" } })
            </div>
        </div>
        <div class="form-group row" id="divTotalTickets" style="display:none">
            @Html.LabelFor(m => m.TotalTickets, new { @class = "col-xs-2 col-form-label form-control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.TotalTickets, new { @class = "form-control", @placeholder = "Total # of Tickets available" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-primary" value="Register" />
            </div>
        </div>
    }

    <script src="~/Content/js/jquery-2.1.3.min.js"></script>
    <script>

        $(document).ready(function () {
            document.getElementById("chkIsFree").checked = true;
        });


        $('#chkIsTeam').on('change', function () {
            if ($('#chkIsTeam:checked').length > 0) {
                $('#lblName').text('Team Name');
                $('#divTotalMembers').show();
            }
            else {
                $('#lblName').text('Name');
                $('#divTotalMembers').hide();
            }
        });

        $('#chkIsFree').on('change', function () {
            if ($('#chkIsFree:checked').length > 0) {
                $('#divTotalTickets').hide();
            }
            else {
                $('#divTotalTickets').show();
            }
        });

    </script>*@